{"version":3,"sources":["Pict.tsx","Characters.ts","App.tsx","Game.ts","reportWebVitals.ts","index.tsx"],"names":["Pict","BG","pictId","x","y","onClick","offsetX","document","body","clientWidth","offsetY","documentElement","clientHeight","pictX","Math","floor","pictY","style","position","top","left","display","overflow","width","height","imageRendering","userSelect","pointerEvents","src","alt","View","className","children","App","SE","ACTION","props","game","bgData","mapData","objects","time","React","useState","step","setStep","setCounter","useEffect","setInterval","s","onKeyDown","e","code","startSound","window","addEventListener","removeEventListener","getFontStyle","color","fontSize","size","paddingTop","map","line","ch","GROUND","obj","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sound","SOUND","initialMapData","mapSize","push","SPACE","Game","this","message","action","UPDATE","sound","play","start","ConnectSock","interval","sock","SockJS","onopen","console","log","send","JSON","stringify","type","onmessage","data","parse","control","onerror","onclose","clearInterval","setTimeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5be4dba9.chunk.js","sourcesContent":["type Props = {\n  pictId: number;\n  x: number;\n  y: number;\n  onClick?: (event: React.MouseEvent<HTMLInputElement>) => void;\n};\n\nfunction Pict({ pictId = 0, x = 0, y = 0, onClick }: Props) {\n  const offsetX = (document.body.clientWidth - 21 * 32) / 2;\n  const offsetY = (document.documentElement.clientHeight - 21 * 32) / 2;\n  const pictX = Math.floor(pictId % 8);\n  const pictY = Math.floor(pictId / 8);\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: y * 32 + offsetY,\n        left: x * 32 + offsetX,\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        width: 32,\n        height: 32,\n        imageRendering: \"pixelated\",\n        userSelect: \"none\",\n      }}\n      onClick={onClick}\n    >\n      <img\n        style={{\n          position: \"relative\",\n          left: -pictX * 32,\n          top: -pictY * 32,\n          pointerEvents: \"none\",\n        }}\n        src=\"characters.png\"\n        alt=\"\"\n      />\n    </div>\n  );\n}\n\nexport default Pict;\n","export enum BG {\n  SPACE = 0,\n  GROUND = 17,\n  ROCK = 10,\n  PLAYER = 1,\n  KEY = 11,\n  COIN = 33,\n  BULLET = 9,\n  CROSS = 25,\n  CACTUS = 18,\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pict from \"Pict\";\nimport { BG } from \"Characters\";\nimport { Game } from \"Game\";\n\ntype ViewProps = {\n  className?: string;\n  offsetY: number;\n  offsetX: number;\n};\nconst View: React.FC<ViewProps> = ({\n  className,\n  children,\n  offsetY,\n  offsetX,\n}) => {\n  return (\n    <div\n      className={className}\n      style={{\n        width: 21 * 32,\n        height: 21 * 32,\n        top: offsetY,\n        left: offsetX,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\ntype AppProps = {\n  game: Game;\n};\n\nfunction App(props: AppProps) {\n  const offsetX = (document.body.clientWidth - 21 * 32) / 2;\n  const offsetY = (document.documentElement.clientHeight - 21 * 32) / 2;\n\n  const { game } = props;\n  const { bgData, mapData, objects, time } = game;\n  const [step, setStep] = React.useState(\"title\");\n  const [counter, setCounter] = React.useState(0);\n\n  React.useEffect(() => {\n    setInterval(() => {\n      setCounter((s) => s + 1);\n    }, 100);\n  }, []);\n\n  React.useEffect(() => {\n    const onKeyDown = function (e: KeyboardEvent) {\n      switch (e.code) {\n        case \"Space\":\n          setStep(\"play\");\n          game.startSound();\n          break;\n      }\n    };\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [game]);\n\n  const getFontStyle = ({\n    color,\n    size,\n    y,\n  }: {\n    color: string;\n    size: number;\n    y: number;\n  }) => {\n    return { color, fontSize: size, paddingTop: y };\n  };\n\n  return (\n    <div>\n      {step === \"title\" && (\n        <View className=\"title\" offsetX={offsetX} offsetY={offsetY}>\n          <div style={getFontStyle({ color: \"orange\", size: 96, y: 200 })}>\n            GUNMAN\n          </div>\n          <div\n            className=\"blink\"\n            style={getFontStyle({ color: \"white\", size: 32, y: 50 })}\n          >\n            PUSH SPACE KEY\n          </div>\n        </View>\n      )}\n      {step === \"play\" && (\n        <>\n          {bgData.map((line, y) => {\n            return line.map((ch, x) => (\n              <Pict key={`${x}-${y}`} pictId={BG.GROUND} x={x} y={y} />\n            ));\n          })}\n          {mapData.map((line, y) => {\n            return line.map((ch, x) => (\n              <Pict key={`${x}-${y}`} pictId={ch} x={x} y={y} />\n            ));\n          })}\n          {objects.map((obj, i) => {\n            return <Pict key={i} pictId={obj.pictId} x={obj.x} y={obj.y} />;\n          })}\n          <View className=\"time\" offsetX={offsetX} offsetY={offsetY - 52}>\n            <div style={getFontStyle({ color: \"white\", size: 48, y: 0 })}>\n              {time}\n            </div>\n          </View>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { BG } from \"Characters\";\n\ninterface SoundPlayer {\n  play: (mml: string, track: number) => void;\n  stop: (track: number) => void;\n}\nconst Sound: SoundPlayer = (window as any).SOUND;\n\nenum SE {\n  start = \"@0-0 o5 l16 v0 cd\",\n  move = \"@0-0 o5 l16 v12 cd\",\n  shot = \"@0-5 o8 l4 v12 c\",\n  dead = \"@0-0 o5 l16 v12 gfdc\",\n  coin = \"@0-0 o8 l4 v12 ab\",\n  broken = \"@0-0 o3 l16 v12 abcrc\",\n}\n\nenum ACTION {\n  UPDATE = \"update\",\n  SOUND = \"sound\",\n}\n\nconst initialMapData = (mapSize = { width: 21, height: 21 }) => {\n  const mapData: BG[][] = [];\n  const { width, height } = mapSize;\n  for (let y = 0; y < height; y++) {\n    const line = [];\n    for (let x = 0; x < width; x++) {\n      line.push(BG.SPACE);\n    }\n    mapData.push(line);\n  }\n  return mapData;\n};\n\nexport class GameObject {\n  pictId: number = 0;\n  x: number = 0;\n  y: number = 0;\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport type GameControllMessage = {\n  action: ACTION;\n  mapData: BG[][];\n  objects: GameObject[];\n  sound: string;\n  time: string;\n};\n\nexport class Game {\n  bgData: BG[][] = [];\n  mapData: BG[][] = [];\n  mapSize = { width: 21, height: 21 };\n  objects: GameObject[] = [];\n  time: string = \"\";\n\n  constructor() {\n    this.bgData = initialMapData(this.mapSize);\n    this.mapData = initialMapData(this.mapSize);\n  }\n\n  control(message: GameControllMessage) {\n    const { action } = message;\n    if (action === ACTION.UPDATE) {\n      const { mapData, objects, time } = message;\n      this.objects = [...objects];\n      this.mapData = mapData;\n      this.time = time;\n    }\n    if (action === ACTION.SOUND) {\n      const { sound } = message;\n      Sound.play(sound, 0);\n    }\n  }\n\n  startSound() {\n    Sound.play(SE.start, 0);\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Game, GameControllMessage } from \"Game\";\nimport SockJS from \"sockjs-client\";\n\nconst game = new Game();\n\nfunction ConnectSock() {\n  let sock = new SockJS(\"/controller\");\n  let interval: NodeJS.Timeout;\n\n  sock.onopen = function () {\n    console.log(\"open\");\n    interval = setInterval(() => {\n      sock.send(JSON.stringify({ type: \"heatbeet\" }));\n    }, 3000);\n  };\n\n  sock.onmessage = function (e) {\n    if (typeof e.data === \"string\") {\n      if (e.data === \"ok\") return;\n    }\n    const message = JSON.parse(e.data);\n    game.control(message as GameControllMessage);\n  };\n\n  sock.onerror = function () {\n    console.log(\"error\");\n  };\n\n  sock.onclose = function () {\n    clearInterval(interval);\n    console.log(\"close\");\n    setTimeout(() => {\n      ConnectSock();\n    }, 3000);\n  };\n}\nConnectSock();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App game={game} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}